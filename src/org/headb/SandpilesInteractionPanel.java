package org.headb;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SandpilesInteractionPanel.java
 *
 * Created on Feb 28, 2009, 8:08:59 PM
 */

/**
 *
 * @author headb
 */
import java.awt.CardLayout;
import java.awt.Cursor;
import javax.swing.Timer;

public class SandpilesInteractionPanel extends javax.swing.JPanel implements RepaintListener {
	private static final String MAKE_GRID_STATE = "Make Grid";
	private static final String MAKE_HEX_GRID_STATE = "Make Hex Grid";
	private static final String MAKE_HONEYCOMB_STATE = "Make Honeycomb";
	private static final String CONFIG_MANAGER_STATE = "Config Manager";
	private static final String VISUAL_OPTIONS_STATE = "Visual Options";
	private static final String EDIT_GRAPH_STATE = "Edit Graph";

	//built-in configs
	private static final String MAX_CONFIG = "Max Stable";
	private static final String IDENTITY_CONFIG = "Identity";
	private static final String BURNING_CONFIG = "Burning";
	private static final String DUAL_CONFIG = "Dual of Current";
	private static final String ONES_CONFIG = "Ones Everywhere";
	private SandpileController sandpileController;
	private SandpileGLDrawer drawer;



    private boolean running = false;
	//private Thread spThread;
    private Timer runTimer;


    /** Creates new form SandpilesInteractionPanel */
    public SandpilesInteractionPanel() {
        initComponents();
		drawer = new SandpileGLDrawer(canvas);
		sandpileController = new SandpileController(drawer);
		canvas.addMouseListener(drawer);
		canvas.addMouseMotionListener(drawer);
		drawer.addRepaintListener(this);

		runTimer = new Timer(0,sandpileController);
		runTimer.setDelay(0);
		sandpileController.setMinUpdateDelay(delaySlider.getValue());
		CardLayout cl = (CardLayout)(optionsContainerPanel.getLayout());
		//cl.show(optionsContainerPanel, (String)evt.getItem());
		String currentState =  (String) controlStateComboBox.getSelectedItem();
		if(currentState.equals(MAKE_GRID_STATE) || currentState.equals(MAKE_HEX_GRID_STATE)){
			cl.show(optionsContainerPanel, MAKE_GRID_STATE);
		}else if(currentState.equals(MAKE_HONEYCOMB_STATE)){
			cl.show(optionsContainerPanel,MAKE_HONEYCOMB_STATE);
		}else if(currentState.equals(CONFIG_MANAGER_STATE)){
			cl.show(optionsContainerPanel, CONFIG_MANAGER_STATE);
		}else if(currentState.equals(VISUAL_OPTIONS_STATE)){
			cl.show(optionsContainerPanel, VISUAL_OPTIONS_STATE);
		}else if(currentState.equals(EDIT_GRAPH_STATE)){
			cl.show(optionsContainerPanel, EDIT_GRAPH_STATE);
		}
		//spThread = new Thread(sandpileController);
    }

	public void onRepaint(){
		this.zoomSlider.setValue((int)(drawer.getZoom()*1000));

		this.centerCoordLabel.setText(String.format("%.2f, %.2f", drawer.getOriginX(), drawer.getOriginY()));
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        controlStateComboBox = new javax.swing.JComboBox();
        optionsContainerPanel = new javax.swing.JPanel();
        blankOptionsPanel = new javax.swing.JPanel();
        editConfigButtonGroup = new javax.swing.ButtonGroup();
        editGraphButtonGroup = new javax.swing.ButtonGroup();
        sandpileViewScrollPane = new javax.swing.JScrollPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        controlPanel = new javax.swing.JPanel();
        quitButton = new javax.swing.JButton();
        optionsTabbedPane = new javax.swing.JTabbedPane();
        editGraphPanel = new javax.swing.JPanel();
        addVertexRadioButton = new javax.swing.JRadioButton();
        removeVertexRadioButton = new javax.swing.JRadioButton();
        addEdgeRadioButton = new javax.swing.JRadioButton();
        removeEdgeRadioButton = new javax.swing.JRadioButton();
        addUndirectedEdgeRadioButton = new javax.swing.JRadioButton();
        removeUndirectedEdgeRadioButton = new javax.swing.JRadioButton();
        edgeWeightField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        configManagerOptionsPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        configSelectList = new javax.swing.JList();
        addConfigButton = new javax.swing.JButton();
        setConfigButton = new javax.swing.JButton();
        addSandRadioButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        removeSandRadioButton = new javax.swing.JRadioButton();
        setSandRadioButton = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        amountOfSandField = new javax.swing.JTextField();
        addRandomSandButton = new javax.swing.JButton();
        makeHoneycombOptionsPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        makeHoneycombBorderComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        makeHoneycombRadiusField = new javax.swing.JTextField();
        makeGridOptionsPanel = new javax.swing.JPanel();
        gridSizeLabel = new javax.swing.JLabel();
        gridRowsField = new javax.swing.JTextField();
        gridSizeCrossLabel = new javax.swing.JLabel();
        gridColsField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nBorderComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        sBorderComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        eBorderComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        wBorderComboBox = new javax.swing.JComboBox();
        makeHexGridOptionsPanel = new javax.swing.JPanel();
        gridSizeLabel1 = new javax.swing.JLabel();
        hexGridRowsField = new javax.swing.JTextField();
        gridSizeCrossLabel1 = new javax.swing.JLabel();
        hexGridColsField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        hexNBorderComboBox = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        hexSBorderComboBox = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        hexEBorderComboBox = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        hexWBorderComboBox = new javax.swing.JComboBox();
        visualOptionsPanel = new javax.swing.JPanel();
        repaintCheckBox = new javax.swing.JCheckBox();
        labelsCheckBox = new javax.swing.JCheckBox();
        changingNodeSizeCheckBox = new javax.swing.JCheckBox();
        drawEdgesCheckBox = new javax.swing.JCheckBox();
        printFPSCheckBox = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();
        colorModeComboBox = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        canvas = new javax.media.opengl.GLCanvas();
        jLabel13 = new javax.swing.JLabel();
        centerCoordLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jToolBar1 = new javax.swing.JToolBar();
        runButton = new javax.swing.JToggleButton();
        stepButton = new javax.swing.JButton();
        stabilizeButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        delayLabel = new javax.swing.JLabel();
        delaySlider = new javax.swing.JSlider();
        delayTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel2 = new javax.swing.JLabel();
        zoomSlider = new javax.swing.JSlider();
        zoomTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        clearSandButton = new javax.swing.JButton();
        deleteGraphButton = new javax.swing.JButton();
        resetFiringsButton = new javax.swing.JButton();

        controlStateComboBox.setMaximumRowCount(16);
        controlStateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { EDIT_GRAPH_STATE, CONFIG_MANAGER_STATE, MAKE_GRID_STATE, MAKE_HEX_GRID_STATE, MAKE_HONEYCOMB_STATE, VISUAL_OPTIONS_STATE}));
        controlStateComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                controlStateComboBoxItemStateChanged(evt);
            }
        });
        controlStateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlStateComboBoxActionPerformed(evt);
            }
        });

        optionsContainerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));
        optionsContainerPanel.setLayout(new java.awt.CardLayout());
        //optionsContainerPanel.add(blankOptionsPanel, ADD_VERTEX_STATE);
        //optionsContainerPanel.add(blankOptionsPanel, DEL_VERTEX_STATE);
        optionsContainerPanel.add(makeGridOptionsPanel, MAKE_GRID_STATE);
        //optionsContainerPanel.add(addSandOptionsPanel, ADD_SAND_STATE);
        //optionsContainerPanel.add(addSandOptionsPanel, DEL_SAND_STATE);
        //optionsContainerPanel.add(addEdgeOptionsPanel, ADD_EDGE_STATE);
        optionsContainerPanel.add(makeHoneycombOptionsPanel, MAKE_HONEYCOMB_STATE);
        optionsContainerPanel.add(configManagerOptionsPanel, CONFIG_MANAGER_STATE);
        optionsContainerPanel.add(visualOptionsPanel, VISUAL_OPTIONS_STATE);
        optionsContainerPanel.add(editGraphPanel, EDIT_GRAPH_STATE);
        //optionsContainerPanel.add(addEdgeOptionsPanel, DEL_EDGE_STATE);
        //optionsContainerPanel.add(addEdgeOptionsPanel, ADD_UNDI_EDGE_STATE);
        //optionsContainerPanel.add(addEdgeOptionsPanel, DEL_UNDI_EDGE_STATE);

        org.jdesktop.layout.GroupLayout blankOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(blankOptionsPanel);
        blankOptionsPanel.setLayout(blankOptionsPanelLayout);
        blankOptionsPanelLayout.setHorizontalGroup(
            blankOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 55, Short.MAX_VALUE)
        );
        blankOptionsPanelLayout.setVerticalGroup(
            blankOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 17, Short.MAX_VALUE)
        );

        sandpileViewScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        sandpileViewScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        setPreferredSize(new java.awt.Dimension(1024, 768));
        setRequestFocusEnabled(false);

        jSplitPane1.setDividerLocation(270);
        jSplitPane1.setDividerSize(8);
        jSplitPane1.setOneTouchExpandable(true);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(996, 800));

        quitButton.setText("Quit"); // NOI18N
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        optionsTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        optionsTabbedPane.setMinimumSize(new java.awt.Dimension(200, 44));
        optionsTabbedPane.setPreferredSize(new java.awt.Dimension(200, 621));

        editGraphButtonGroup.add(addVertexRadioButton);
        addVertexRadioButton.setSelected(true);
        addVertexRadioButton.setText("Add Vertex"); // NOI18N

        editGraphButtonGroup.add(removeVertexRadioButton);
        removeVertexRadioButton.setText("Remove Vertex"); // NOI18N

        editGraphButtonGroup.add(addEdgeRadioButton);
        addEdgeRadioButton.setText("Add Edge"); // NOI18N

        editGraphButtonGroup.add(removeEdgeRadioButton);
        removeEdgeRadioButton.setText("Remove Edge"); // NOI18N

        editGraphButtonGroup.add(addUndirectedEdgeRadioButton);
        addUndirectedEdgeRadioButton.setText("Add Undirected Edge"); // NOI18N

        editGraphButtonGroup.add(removeUndirectedEdgeRadioButton);
        removeUndirectedEdgeRadioButton.setText("Remove Undirected Edge"); // NOI18N

        edgeWeightField.setText("1"); // NOI18N

        jLabel1.setText("Edge Weight"); // NOI18N

        org.jdesktop.layout.GroupLayout editGraphPanelLayout = new org.jdesktop.layout.GroupLayout(editGraphPanel);
        editGraphPanel.setLayout(editGraphPanelLayout);
        editGraphPanelLayout.setHorizontalGroup(
            editGraphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(editGraphPanelLayout.createSequentialGroup()
                .add(editGraphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(addVertexRadioButton)
                    .add(removeVertexRadioButton)
                    .add(addEdgeRadioButton)
                    .add(removeEdgeRadioButton)
                    .add(addUndirectedEdgeRadioButton)
                    .add(removeUndirectedEdgeRadioButton)
                    .add(editGraphPanelLayout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(edgeWeightField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        editGraphPanelLayout.setVerticalGroup(
            editGraphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(editGraphPanelLayout.createSequentialGroup()
                .add(addVertexRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(removeVertexRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(addEdgeRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(removeEdgeRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(addUndirectedEdgeRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(removeUndirectedEdgeRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(editGraphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(edgeWeightField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(487, Short.MAX_VALUE))
        );

        optionsTabbedPane.addTab(EDIT_GRAPH_STATE, editGraphPanel);

        configManagerOptionsPanel.setPreferredSize(new java.awt.Dimension(150, 600));

        configSelectList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { MAX_CONFIG, IDENTITY_CONFIG, BURNING_CONFIG, DUAL_CONFIG, ONES_CONFIG };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(configSelectList);

        addConfigButton.setText("Add"); // NOI18N
        addConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addConfigButtonActionPerformed(evt);
            }
        });

        setConfigButton.setText("Set"); // NOI18N
        setConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setConfigButtonActionPerformed(evt);
            }
        });

        editConfigButtonGroup.add(addSandRadioButton);
        addSandRadioButton.setSelected(true);
        addSandRadioButton.setText("Add Sand"); // NOI18N

        jLabel7.setText("On click:"); // NOI18N

        editConfigButtonGroup.add(removeSandRadioButton);
        removeSandRadioButton.setText("Remove Sand"); // NOI18N

        editConfigButtonGroup.add(setSandRadioButton);
        setSandRadioButton.setText("Set Sand"); // NOI18N

        jLabel8.setText("Amount:"); // NOI18N

        amountOfSandField.setText("1"); // NOI18N

        addRandomSandButton.setText("Add Random");
        addRandomSandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRandomSandButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout configManagerOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(configManagerOptionsPanel);
        configManagerOptionsPanel.setLayout(configManagerOptionsPanelLayout);
        configManagerOptionsPanelLayout.setHorizontalGroup(
            configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(removeSandRadioButton)
            .add(configManagerOptionsPanelLayout.createSequentialGroup()
                .add(addConfigButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 72, Short.MAX_VALUE)
                .add(setConfigButton))
            .add(jLabel7)
            .add(addSandRadioButton)
            .add(configManagerOptionsPanelLayout.createSequentialGroup()
                .add(configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(setSandRadioButton)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(amountOfSandField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
            .add(addRandomSandButton)
        );
        configManagerOptionsPanelLayout.setVerticalGroup(
            configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(configManagerOptionsPanelLayout.createSequentialGroup()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addConfigButton)
                    .add(setConfigButton))
                .add(18, 18, 18)
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addSandRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(removeSandRadioButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(setSandRadioButton)
                .add(4, 4, 4)
                .add(configManagerOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(amountOfSandField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addRandomSandButton)
                .addContainerGap(366, Short.MAX_VALUE))
        );

        optionsTabbedPane.addTab(CONFIG_MANAGER_STATE, configManagerOptionsPanel);

        jLabel9.setText("Border:"); // NOI18N

        makeHoneycombBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected" }));
        makeHoneycombBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeHoneycombBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel10.setText("Radius:"); // NOI18N

        makeHoneycombRadiusField.setText("5"); // NOI18N
        makeHoneycombRadiusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeHoneycombRadiusFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout makeHoneycombOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(makeHoneycombOptionsPanel);
        makeHoneycombOptionsPanel.setLayout(makeHoneycombOptionsPanelLayout);
        makeHoneycombOptionsPanelLayout.setHorizontalGroup(
            makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                .add(makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(makeHoneycombBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(makeHoneycombRadiusField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(110, 110, 110))
        );
        makeHoneycombOptionsPanelLayout.setVerticalGroup(
            makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeHoneycombOptionsPanelLayout.createSequentialGroup()
                .add(makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(makeHoneycombRadiusField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeHoneycombOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(makeHoneycombBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(609, Short.MAX_VALUE))
        );

        optionsTabbedPane.addTab(MAKE_HONEYCOMB_STATE, makeHoneycombOptionsPanel);

        gridSizeLabel.setText("Grid Size:"); // NOI18N

        gridRowsField.setText("5"); // NOI18N
        gridRowsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridRowsFieldActionPerformed(evt);
            }
        });
        gridRowsField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gridRowsFieldPropertyChange(evt);
            }
        });

        gridSizeCrossLabel.setText("X"); // NOI18N

        gridColsField.setText("5"); // NOI18N
        gridColsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridColsFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("N Border:"); // NOI18N

        nBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        nBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("S Border:"); // NOI18N

        sBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        sBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("E Border:"); // NOI18N

        eBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        eBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("W Border:"); // NOI18N

        wBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        wBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wBorderComboBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout makeGridOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(makeGridOptionsPanel);
        makeGridOptionsPanel.setLayout(makeGridOptionsPanelLayout);
        makeGridOptionsPanelLayout.setHorizontalGroup(
            makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeGridOptionsPanelLayout.createSequentialGroup()
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(makeGridOptionsPanelLayout.createSequentialGroup()
                        .add(gridSizeLabel)
                        .add(2, 2, 2)
                        .add(gridRowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(gridSizeCrossLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(gridColsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeGridOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(sBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeGridOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeGridOptionsPanelLayout.createSequentialGroup()
                        .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(wBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(eBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(37, 37, 37))
        );
        makeGridOptionsPanelLayout.setVerticalGroup(
            makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeGridOptionsPanelLayout.createSequentialGroup()
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(gridSizeLabel)
                    .add(gridRowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(gridSizeCrossLabel)
                    .add(gridColsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(nBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(sBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(eBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(wBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(516, Short.MAX_VALUE))
        );

        optionsTabbedPane.addTab(MAKE_GRID_STATE, makeGridOptionsPanel);

        gridSizeLabel1.setText("Grid Size:"); // NOI18N

        hexGridRowsField.setText("5"); // NOI18N
        hexGridRowsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexGridRowsFieldActionPerformed(evt);
            }
        });
        hexGridRowsField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                hexGridRowsFieldPropertyChange(evt);
            }
        });

        gridSizeCrossLabel1.setText("X"); // NOI18N

        hexGridColsField.setText("5"); // NOI18N
        hexGridColsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexGridColsFieldActionPerformed(evt);
            }
        });

        jLabel14.setText("N Border:"); // NOI18N

        hexNBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        hexNBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexNBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel15.setText("S Border:"); // NOI18N

        hexSBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        hexSBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexSBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel16.setText("E Border:"); // NOI18N

        hexEBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        hexEBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexEBorderComboBoxActionPerformed(evt);
            }
        });

        jLabel17.setText("W Border:"); // NOI18N

        hexWBorderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "None" }));
        hexWBorderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexWBorderComboBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout makeHexGridOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(makeHexGridOptionsPanel);
        makeHexGridOptionsPanel.setLayout(makeHexGridOptionsPanelLayout);
        makeHexGridOptionsPanelLayout.setHorizontalGroup(
            makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeHexGridOptionsPanelLayout.createSequentialGroup()
                .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(makeHexGridOptionsPanelLayout.createSequentialGroup()
                        .add(gridSizeLabel1)
                        .add(2, 2, 2)
                        .add(hexGridRowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(gridSizeCrossLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hexGridColsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeHexGridOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel15)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(hexSBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeHexGridOptionsPanelLayout.createSequentialGroup()
                        .add(jLabel14)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hexNBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(makeHexGridOptionsPanelLayout.createSequentialGroup()
                        .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel16)
                            .add(jLabel17))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(hexWBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(hexEBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(37, 37, 37))
        );
        makeHexGridOptionsPanelLayout.setVerticalGroup(
            makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(makeHexGridOptionsPanelLayout.createSequentialGroup()
                .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(gridSizeLabel1)
                    .add(hexGridRowsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(gridSizeCrossLabel1)
                    .add(hexGridColsField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(hexNBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(hexSBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(hexEBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(makeHexGridOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel17)
                    .add(hexWBorderComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(516, Short.MAX_VALUE))
        );

        optionsTabbedPane.addTab(MAKE_HEX_GRID_STATE, makeHexGridOptionsPanel);

        repaintCheckBox.setSelected(true);
        repaintCheckBox.setText("Repaint"); // NOI18N
        repaintCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repaintCheckBoxActionPerformed(evt);
            }
        });

        labelsCheckBox.setText("Draw Labels"); // NOI18N
        labelsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labelsCheckBoxActionPerformed(evt);
            }
        });

        changingNodeSizeCheckBox.setSelected(true);
        changingNodeSizeCheckBox.setText("Changing Node Size"); // NOI18N
        changingNodeSizeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changingNodeSizeCheckBoxActionPerformed(evt);
            }
        });

        drawEdgesCheckBox.setSelected(true);
        drawEdgesCheckBox.setText("Draw Edges"); // NOI18N
        drawEdgesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawEdgesCheckBoxActionPerformed(evt);
            }
        });

        printFPSCheckBox.setText("Print FPS");
        printFPSCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printFPSCheckBoxActionPerformed(evt);
            }
        });

        jLabel18.setText("Color Mode: ");

        colorModeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Number of grains", "Stability", "Total firings" }));
        colorModeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorModeComboBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout visualOptionsPanelLayout = new org.jdesktop.layout.GroupLayout(visualOptionsPanel);
        visualOptionsPanel.setLayout(visualOptionsPanelLayout);
        visualOptionsPanelLayout.setHorizontalGroup(
            visualOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(visualOptionsPanelLayout.createSequentialGroup()
                .add(visualOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(repaintCheckBox)
                    .add(labelsCheckBox)
                    .add(changingNodeSizeCheckBox)
                    .add(drawEdgesCheckBox)
                    .add(printFPSCheckBox)
                    .add(jLabel18)
                    .add(colorModeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        visualOptionsPanelLayout.setVerticalGroup(
            visualOptionsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(visualOptionsPanelLayout.createSequentialGroup()
                .add(repaintCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(labelsCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(changingNodeSizeCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(drawEdgesCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(printFPSCheckBox)
                .add(18, 18, 18)
                .add(jLabel18)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(colorModeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(488, Short.MAX_VALUE))
        );

        optionsTabbedPane.addTab(VISUAL_OPTIONS_STATE, visualOptionsPanel);

        org.jdesktop.layout.GroupLayout controlPanelLayout = new org.jdesktop.layout.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(quitButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
            .add(optionsTabbedPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, controlPanelLayout.createSequentialGroup()
                .add(optionsTabbedPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(quitButton)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(controlPanel);

        canvas.setPreferredSize(new java.awt.Dimension(1,1));
        canvas.setMinimumSize(new java.awt.Dimension(1,1));
        canvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                canvasMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvasMouseClicked(evt);
            }
        });

        jLabel13.setText("Center:");

        centerCoordLabel.setText("0.0, 0.0");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(centerCoordLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(619, Short.MAX_VALUE))
            .add(canvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(canvas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel13)
                        .add(centerCoordLabel))
                    .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jSplitPane1.setRightComponent(jPanel1);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        runButton.setText("Run"); // NOI18N
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(runButton);

        stepButton.setText("Step"); // NOI18N
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButtonActionPerformed(evt);
            }
        });
        stepButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stepButtonMouseClicked(evt);
            }
        });
        jToolBar1.add(stepButton);

        stabilizeButton.setText("Stabilize");
        stabilizeButton.setFocusable(false);
        stabilizeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stabilizeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        stabilizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stabilizeButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(stabilizeButton);
        jToolBar1.add(jSeparator1);

        delayLabel.setText("Delay:"); // NOI18N
        jToolBar1.add(delayLabel);

        delaySlider.setMaximum(1000);
        delaySlider.setToolTipText("Adjusts the number of milliseconds between each update."); // NOI18N
        delaySlider.setValue(100);
        delaySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                delaySliderStateChanged(evt);
            }
        });
        jToolBar1.add(delaySlider);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, delaySlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), delayTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        delayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delayTextFieldActionPerformed(evt);
            }
        });
        jToolBar1.add(delayTextField);

        jLabel12.setText("ms"); // NOI18N
        jToolBar1.add(jLabel12);
        jToolBar1.add(jSeparator2);

        jLabel2.setText("Zoom:"); // NOI18N
        jToolBar1.add(jLabel2);

        zoomSlider.setMaximum(10000);
        zoomSlider.setValue(1000);
        zoomSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                zoomSliderStateChanged(evt);
            }
        });
        jToolBar1.add(zoomSlider);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, zoomSlider, org.jdesktop.beansbinding.ELProperty.create("${value/10.0}"), zoomTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        zoomTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomTextFieldActionPerformed(evt);
            }
        });
        jToolBar1.add(zoomTextField);

        jLabel11.setText("%  "); // NOI18N
        jToolBar1.add(jLabel11);
        jToolBar1.add(jSeparator3);

        clearSandButton.setText("Clear Sand"); // NOI18N
        clearSandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSandButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(clearSandButton);

        deleteGraphButton.setText("Del. Graph"); // NOI18N
        deleteGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGraphButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(deleteGraphButton);

        resetFiringsButton.setText("Reset Firings Count");
        resetFiringsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetFiringsButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(resetFiringsButton);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSplitPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

	public SandpileController getSandpilePanel() {
		return this.sandpileController;
	}
	private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
		//runTimer.setDelay( delaySlider.getValue());
		sandpileController.setMinUpdateDelay(delaySlider.getValue());
		if(runTimer.isRunning()){
			runTimer.stop();
		}else{
			runTimer.start();
		}
		/*if(spThread.isAlive()) {
			spThread.interrupt();
			try{
				spThread.join();
				spThread = new Thread(sandpileController);
			}catch(InterruptedException e){
				return;
			}
		}else {
			spThread.start();
		}*/
}//GEN-LAST:event_runButtonActionPerformed

	private void delaySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_delaySliderStateChanged
		sandpileController.setMinUpdateDelay(delaySlider.getValue());
		//sandpileController.setDelay(delaySlider.getValue());
}//GEN-LAST:event_delaySliderStateChanged

	private void delayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delayTextFieldActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_delayTextFieldActionPerformed

	private void controlStateComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_controlStateComboBoxItemStateChanged
		String currentState = (String)evt.getItem();
		CardLayout cl = (CardLayout)(optionsContainerPanel.getLayout());
		//cl.show(optionsContainerPanel, (String)evt.getItem());
		if(currentState.equals(MAKE_GRID_STATE) || currentState.equals(MAKE_HEX_GRID_STATE)){
			cl.show(optionsContainerPanel, MAKE_GRID_STATE);
		}else if(currentState.equals(MAKE_HONEYCOMB_STATE)){
			cl.show(optionsContainerPanel,MAKE_HONEYCOMB_STATE);
		}else if(currentState.equals(CONFIG_MANAGER_STATE)){
			cl.show(optionsContainerPanel, CONFIG_MANAGER_STATE);
		}else if(currentState.equals(VISUAL_OPTIONS_STATE)){
			cl.show(optionsContainerPanel, VISUAL_OPTIONS_STATE);
		}else if(currentState.equals(EDIT_GRAPH_STATE)){
			cl.show(optionsContainerPanel, EDIT_GRAPH_STATE);
		}
}//GEN-LAST:event_controlStateComboBoxItemStateChanged

	private void controlStateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlStateComboBoxActionPerformed
		//sandpileController.setControlState(controlStateComboBox.getSelectedIndex());
}//GEN-LAST:event_controlStateComboBoxActionPerformed

	private void clearSandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSandButtonActionPerformed
		sandpileController.clearSand();
}//GEN-LAST:event_clearSandButtonActionPerformed

	private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
		System.exit(0);
}//GEN-LAST:event_quitButtonActionPerformed

	private void stepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButtonActionPerformed
		sandpileController.update();
		sandpileController.repaint();
}//GEN-LAST:event_stepButtonActionPerformed

	private void stepButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stepButtonMouseClicked

}//GEN-LAST:event_stepButtonMouseClicked

	private void deleteGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGraphButtonActionPerformed
		sandpileController.delAllVertices();
}//GEN-LAST:event_deleteGraphButtonActionPerformed

	private void zoomSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_zoomSliderStateChanged

		drawer.setZoom(zoomSlider.getValue()/1000f);
}//GEN-LAST:event_zoomSliderStateChanged

	private void makeHoneycombBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeHoneycombBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_makeHoneycombBorderComboBoxActionPerformed

	private void makeHoneycombRadiusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeHoneycombRadiusFieldActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_makeHoneycombRadiusFieldActionPerformed

	private void gridRowsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridRowsFieldActionPerformed
		//sandpileController.setGridRows( Integer.parseInt(gridRowsField.getText() ) );
}//GEN-LAST:event_gridRowsFieldActionPerformed

	private void gridRowsFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_gridRowsFieldPropertyChange
		// TODO add your handling code here:
}//GEN-LAST:event_gridRowsFieldPropertyChange

	private void gridColsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridColsFieldActionPerformed
		//sandpileController.setGridCols( Integer.parseInt( gridColsField.getText() ) );
}//GEN-LAST:event_gridColsFieldActionPerformed

	private void nBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_nBorderComboBoxActionPerformed

	private void sBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_sBorderComboBoxActionPerformed

	private void eBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_eBorderComboBoxActionPerformed

	private void wBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_wBorderComboBoxActionPerformed

	private void addConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addConfigButtonActionPerformed
		this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		String selection = (String)configSelectList.getSelectedValue();
		if(selection.equals(MAX_CONFIG)){
			sandpileController.addMaxStableConfig();
		}else if(selection.equals(DUAL_CONFIG)){
			sandpileController.addDualConfig();
		}else if(selection.equals(ONES_CONFIG)){
			sandpileController.addSandEverywhere(1);
		}else if(selection.equals(IDENTITY_CONFIG)){
			sandpileController.addIdentity();
		}else if(selection.equals(BURNING_CONFIG)){
			sandpileController.addBurningConfig();
		}
		this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}//GEN-LAST:event_addConfigButtonActionPerformed

	private void setConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setConfigButtonActionPerformed
		this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		String selection = (String)configSelectList.getSelectedValue();
		if(selection.equals(MAX_CONFIG)){
			sandpileController.setToMaxStableConfig();
		}else if(selection.equals(DUAL_CONFIG)){
			sandpileController.setToDualConfig();
		}else if(selection.equals(ONES_CONFIG)){
			sandpileController.setSandEverywhere(1);
		}else if(selection.equals(IDENTITY_CONFIG)){
			sandpileController.setToIdentity();
		}else if(selection.equals(BURNING_CONFIG)){
			sandpileController.setToBurningConfig();
		}
		this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
}//GEN-LAST:event_setConfigButtonActionPerformed

	private void repaintCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repaintCheckBoxActionPerformed
		drawer.repaint = repaintCheckBox.isSelected();
}//GEN-LAST:event_repaintCheckBoxActionPerformed

	private void labelsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labelsCheckBoxActionPerformed
		drawer.drawLabels=labelsCheckBox.isSelected();
		sandpileController.repaint();
}//GEN-LAST:event_labelsCheckBoxActionPerformed

	private void changingNodeSizeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changingNodeSizeCheckBoxActionPerformed
		drawer.changingVertexSize = changingNodeSizeCheckBox.isSelected();
		sandpileController.repaint();
}//GEN-LAST:event_changingNodeSizeCheckBoxActionPerformed

	private void drawEdgesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawEdgesCheckBoxActionPerformed
		drawer.drawEdges=drawEdgesCheckBox.isSelected();
		sandpileController.repaint();
}//GEN-LAST:event_drawEdgesCheckBoxActionPerformed

	private void sandpileViewPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sandpileViewPanelMouseClicked

}//GEN-LAST:event_sandpileViewPanelMouseClicked

	private void sandpileViewPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sandpileViewPanelMouseReleased

}//GEN-LAST:event_sandpileViewPanelMouseReleased

	private void printFPSCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printFPSCheckBoxActionPerformed
		drawer.printFPS = printFPSCheckBox.isSelected();
	}//GEN-LAST:event_printFPSCheckBoxActionPerformed

	private void canvasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMouseClicked
		this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		String currentState = optionsTabbedPane.getTitleAt(optionsTabbedPane.getSelectedIndex());
		float[] coords = drawer.transformCanvasCoords(evt.getX(), evt.getY());
		float x = coords[0];
		float y = coords[1];
		if(currentState.equals(MAKE_GRID_STATE)){
			sandpileController.makeGrid(Integer.valueOf(gridRowsField.getText()), Integer.valueOf(gridColsField.getText()), x, y,
					nBorderComboBox.getSelectedIndex(),
					sBorderComboBox.getSelectedIndex(),
					eBorderComboBox.getSelectedIndex(),
					wBorderComboBox.getSelectedIndex());
		}else if(currentState.equals(MAKE_HEX_GRID_STATE)){
			sandpileController.makeHexGrid(Integer.valueOf(hexGridRowsField.getText()), Integer.valueOf(hexGridColsField.getText()), x, y,
					hexNBorderComboBox.getSelectedIndex(),
					hexSBorderComboBox.getSelectedIndex(),
					hexEBorderComboBox.getSelectedIndex(),
					hexWBorderComboBox.getSelectedIndex());
		}else if(currentState.equals(EDIT_GRAPH_STATE)) {
			if(editGraphButtonGroup.isSelected(addVertexRadioButton.getModel())){
				sandpileController.addVertexControl(x,y);
			}else if(editGraphButtonGroup.isSelected(removeVertexRadioButton.getModel())){
				sandpileController.delVertexControl(x, y);
			}else if(editGraphButtonGroup.isSelected(addEdgeRadioButton.getModel())){
				sandpileController.addEdgeControl(x, y, Integer.valueOf(edgeWeightField.getText()));
			}else if(editGraphButtonGroup.isSelected(removeEdgeRadioButton.getModel())){
				sandpileController.delEdgeControl(x, y, Integer.valueOf(edgeWeightField.getText()));
			}else if(editGraphButtonGroup.isSelected(addUndirectedEdgeRadioButton.getModel())){
				sandpileController.addUndiEdgeControl(x, y, Integer.valueOf(edgeWeightField.getText()));
			}else if(editGraphButtonGroup.isSelected(removeUndirectedEdgeRadioButton.getModel())){
				sandpileController.delUndiEdgeControl(x, y, Integer.valueOf(edgeWeightField.getText()));
			}

		}else if(currentState.equals(MAKE_HONEYCOMB_STATE)){
			sandpileController.makeHoneycomb(Integer.valueOf(makeHoneycombRadiusField.getText()),x, y,  makeHoneycombBorderComboBox.getSelectedIndex());
		}else if(currentState.equals(CONFIG_MANAGER_STATE)){
			if(editConfigButtonGroup.isSelected(addSandRadioButton.getModel())){
				sandpileController.addSandControl(x,y, Integer.valueOf(amountOfSandField.getText() ) );
			}else if(editConfigButtonGroup.isSelected(removeSandRadioButton.getModel())){
				sandpileController.addSandControl(x,y, -Integer.valueOf(amountOfSandField.getText()));
			}else if(editConfigButtonGroup.isSelected(setSandRadioButton.getModel())){
				sandpileController.setSandControl(x,y, Integer.valueOf(amountOfSandField.getText()));
			}
		}
		this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
	}//GEN-LAST:event_canvasMouseClicked

	private void canvasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasMouseReleased
		// TODO add your handling code here:
	}//GEN-LAST:event_canvasMouseReleased

	private void zoomTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomTextFieldActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_zoomTextFieldActionPerformed

	private void addRandomSandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRandomSandButtonActionPerformed
		for(int i=0; i<Integer.valueOf(this.amountOfSandField.getText()); i++)
			sandpileController.addSandToRandom(1);
		sandpileController.repaint();
}//GEN-LAST:event_addRandomSandButtonActionPerformed

	private void hexGridRowsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexGridRowsFieldActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_hexGridRowsFieldActionPerformed

	private void hexGridRowsFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_hexGridRowsFieldPropertyChange
		// TODO add your handling code here:
}//GEN-LAST:event_hexGridRowsFieldPropertyChange

	private void hexGridColsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexGridColsFieldActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_hexGridColsFieldActionPerformed

	private void hexNBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexNBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_hexNBorderComboBoxActionPerformed

	private void hexSBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexSBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_hexSBorderComboBoxActionPerformed

	private void hexEBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexEBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_hexEBorderComboBoxActionPerformed

	private void hexWBorderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexWBorderComboBoxActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_hexWBorderComboBoxActionPerformed

	private void colorModeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorModeComboBoxActionPerformed
		
		switch(colorModeComboBox.getSelectedIndex()){
			case 0: drawer.setColorMode(SandpileDrawer.ColorMode.NUM_OF_GRAINS); break;
			case 1: drawer.setColorMode(SandpileDrawer.ColorMode.STABILITY); break;
			case 2: drawer.setColorMode(SandpileDrawer.ColorMode.FIRINGS); break;
		}
		sandpileController.repaint();
}//GEN-LAST:event_colorModeComboBoxActionPerformed

	private void resetFiringsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetFiringsButtonActionPerformed
		sandpileController.resetFirings();
	}//GEN-LAST:event_resetFiringsButtonActionPerformed

	private void stabilizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stabilizeButtonActionPerformed
		this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		sandpileController.stabilize();
		sandpileController.repaint();
		this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
	}//GEN-LAST:event_stabilizeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConfigButton;
    private javax.swing.JRadioButton addEdgeRadioButton;
    private javax.swing.JButton addRandomSandButton;
    private javax.swing.JRadioButton addSandRadioButton;
    private javax.swing.JRadioButton addUndirectedEdgeRadioButton;
    private javax.swing.JRadioButton addVertexRadioButton;
    private javax.swing.JTextField amountOfSandField;
    private javax.swing.JPanel blankOptionsPanel;
    private javax.media.opengl.GLCanvas canvas;
    private javax.swing.JLabel centerCoordLabel;
    private javax.swing.JCheckBox changingNodeSizeCheckBox;
    private javax.swing.JButton clearSandButton;
    private javax.swing.JComboBox colorModeComboBox;
    private javax.swing.JPanel configManagerOptionsPanel;
    private javax.swing.JList configSelectList;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JComboBox controlStateComboBox;
    private javax.swing.JLabel delayLabel;
    private javax.swing.JSlider delaySlider;
    private javax.swing.JTextField delayTextField;
    private javax.swing.JButton deleteGraphButton;
    private javax.swing.JCheckBox drawEdgesCheckBox;
    private javax.swing.JComboBox eBorderComboBox;
    private javax.swing.JTextField edgeWeightField;
    private javax.swing.ButtonGroup editConfigButtonGroup;
    private javax.swing.ButtonGroup editGraphButtonGroup;
    private javax.swing.JPanel editGraphPanel;
    private javax.swing.JTextField gridColsField;
    private javax.swing.JTextField gridRowsField;
    private javax.swing.JLabel gridSizeCrossLabel;
    private javax.swing.JLabel gridSizeCrossLabel1;
    private javax.swing.JLabel gridSizeLabel;
    private javax.swing.JLabel gridSizeLabel1;
    private javax.swing.JComboBox hexEBorderComboBox;
    private javax.swing.JTextField hexGridColsField;
    private javax.swing.JTextField hexGridRowsField;
    private javax.swing.JComboBox hexNBorderComboBox;
    private javax.swing.JComboBox hexSBorderComboBox;
    private javax.swing.JComboBox hexWBorderComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JCheckBox labelsCheckBox;
    private javax.swing.JPanel makeGridOptionsPanel;
    private javax.swing.JPanel makeHexGridOptionsPanel;
    private javax.swing.JComboBox makeHoneycombBorderComboBox;
    private javax.swing.JPanel makeHoneycombOptionsPanel;
    private javax.swing.JTextField makeHoneycombRadiusField;
    private javax.swing.JComboBox nBorderComboBox;
    private javax.swing.JPanel optionsContainerPanel;
    private javax.swing.JTabbedPane optionsTabbedPane;
    private javax.swing.JCheckBox printFPSCheckBox;
    private javax.swing.JButton quitButton;
    private javax.swing.JRadioButton removeEdgeRadioButton;
    private javax.swing.JRadioButton removeSandRadioButton;
    private javax.swing.JRadioButton removeUndirectedEdgeRadioButton;
    private javax.swing.JRadioButton removeVertexRadioButton;
    private javax.swing.JCheckBox repaintCheckBox;
    private javax.swing.JButton resetFiringsButton;
    private javax.swing.JToggleButton runButton;
    private javax.swing.JComboBox sBorderComboBox;
    private javax.swing.JScrollPane sandpileViewScrollPane;
    private javax.swing.JButton setConfigButton;
    private javax.swing.JRadioButton setSandRadioButton;
    private javax.swing.JButton stabilizeButton;
    private javax.swing.JButton stepButton;
    private javax.swing.JPanel visualOptionsPanel;
    private javax.swing.JComboBox wBorderComboBox;
    private javax.swing.JSlider zoomSlider;
    private javax.swing.JTextField zoomTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
